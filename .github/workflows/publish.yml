name: Publish Python Package

on:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: pyproject.toml
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    environment: release
    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: pip
        cache-dependency-path: pyproject.toml

    - name: Install dependencies
      run: |
        pip install setuptools wheel build

    - name: Update Versioning For Release
      run: |
        # from refs/tags/v1.2.3 get 1.2.3
        VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
        VER_PLACEHOLDER='__version__ = "develop"'
        VER_FILE='ttork/__version__.py'
        PYPROJECT_PLACEHOLDER='version = "0.0.0"'
        PYPROJECT_FILE='pyproject.toml'

        #ensure the placeholder is in the version file
        grep "$VER_PLACEHOLDER" "$VER_FILE"
        sed -i "s/$VER_PLACEHOLDER/__version__ = \"${VERSION}\"/" "$VER_FILE"

        #ensure the placeholder is in the pyproject file
        grep "$PYPROJECT_PLACEHOLDER" "$PYPROJECT_FILE"
        sed -i "s/$PYPROJECT_PLACEHOLDER/version = \"${VERSION}\"/" "$PYPROJECT_FILE"

    - name: Build
      run: |
        python -m build

    - name: Publish To PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
